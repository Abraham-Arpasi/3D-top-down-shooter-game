using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class Interactable : MonoBehaviour
{
    protected PlayerWeaponController weaponController;

    //makes a glowing material.
    [SerializeField] protected MeshRenderer mesh;
    [SerializeField] protected Material defaultMaterial;
    [SerializeField] private Material highLightMaterial;

    private void Start()
    {
        if (mesh == null)
            mesh = GetComponentInChildren<MeshRenderer>();

        defaultMaterial = mesh.sharedMaterial;
    }

    protected void UpdateMeshAndMaterial(MeshRenderer newMesh)
    {
        mesh = newMesh;
        defaultMaterial = newMesh.sharedMaterial;
    }

    public virtual void Interaction()
    {
        Debug.Log("Interacted with " + gameObject.name);
    }

    //this will make the material turn on and off is active or not.
    public void HighLightActive(bool active)
    {
        if(active)
            mesh.material = highLightMaterial;
        else
            mesh.material = defaultMaterial;
    }

    //if the character touches the object it will be added to the playerInteraction list.
    protected virtual void OnTriggerEnter(Collider other)
    {
        if (weaponController == null)
            weaponController = other.GetComponent<PlayerWeaponController>();

        PlayerInteraction playerInteraction = other.GetComponent<PlayerInteraction>();

        if (playerInteraction == null)
            return;

        //this will make the material active if touching the object.
        //HighLightActive(true);
        playerInteraction.GetInteractables().Add(this);
        playerInteraction.UpdateClosestInteractable();
    }

    //if the character is not touching the object it will no longer be in the playerInteraction list.
    protected virtual void OnTriggerExit(Collider other)
    {
        PlayerInteraction playerInteraction = other.GetComponent<PlayerInteraction>();

        if (playerInteraction == null)
            return;

        //this will make the material go back to default when not touching the object.
        //HighLightActive(false);
        playerInteraction.GetInteractables().Remove(this);
        playerInteraction.UpdateClosestInteractable();
    }
}
