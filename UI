using System.Collections;
using System.Collections.Generic;
using Unity.VisualScripting;
using UnityEngine;

public class UI : MonoBehaviour
{
    public static UI instance;

    public UI_InGame inGameUI { get; private set; }
    public UI_WeaponSelection weaponSelection {  get; private set; }
    public UI_GameOver gameOverUI { get; private set; }

    [SerializeField] private GameObject[] UIElements;
    public GameObject pauseUI;

    private void Awake()
    {
        instance = this;
        inGameUI = GetComponentInChildren<UI_InGame>(true);  
        weaponSelection = GetComponentInChildren<UI_WeaponSelection>(true);
        gameOverUI = GetComponentInChildren<UI_GameOver>(true);
    }

    private void Start()
    {
        AssignInputsUI();
    }

    public void SwitchTo(GameObject uiToSwitchOn)
    {
        foreach(GameObject go in UIElements)
        {
            go.SetActive(false);
        }

        uiToSwitchOn.SetActive(true);   
    }

    public void StartTheGame()
    {
        SwitchTo(inGameUI.gameObject);
        GameManager.Instance.GameStart();
    }

    public void QuitGame()
    {
        Application.Quit();
    }

    public void RestartTheGame()
    {
        GameManager.Instance.RestartScene();
    }

    public void PauseSwitch()
    {
        bool gamePaused = pauseUI.activeSelf;

        if (gamePaused)
        {
            SwitchTo(inGameUI.gameObject);
            ControlManager.instance.SwitchToCharacterControls();
            TimeManager.instance.ResumeTime();
        }
        else
        {
            SwitchTo(pauseUI);
            ControlManager.instance.SwitchToUIControls();
            TimeManager.instance.PauseTime();
        }
    }

    public void ShowGameOverUI(string message = "GAME OVER!")
    {
        SwitchTo(gameOverUI.gameObject);
        gameOverUI.ShowGameOverMessage(message);
    }

    private void AssignInputsUI()
    {
        PlayerControls controls = GameManager.Instance.player.controls;

        controls.UI.UIPause.performed += ctx => PauseSwitch();
    }
}
